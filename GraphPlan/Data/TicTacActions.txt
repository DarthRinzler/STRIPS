(MX (playerX playerO s)
	(Pre
		(s is square)
		(playerX is X)
		(playerO is O)
		(playerX has turn)
		(s has empty)
	)
	(Post
		(not (s has empty))
		(s has X)
		(not (playerX has turn))
		(playerO has turn)
	)
)

(MO (playerO playerX s)
	(Pre
		(s is square)
		(playerX is X)
		(playerO is O)
		(playerO has turn)
		(s has empty)
	)
	(Post
		(not (s has empty))
		(s has O)
		(not (playerO has turn))
		(playerX has turn)
	)
) 

(WinH (p s1 s2 s3 m)
	(Pre
		(p is m)
		(m is mark)
		(s1 is square)
		(s1 hadj s2)
		(s1 has m)
		(s2 hadj s3)
		(s2 is square)
		(s2 has m)
		(s3 is square)
		(s3 has m)
	)
	(Post
		(p is winner)
	)
)

(WinV (p s1 s2 s3 m)
	(Pre
		(p is m)
		(m is mark)
		(s1 is square)
		(s1 vadj s2)
		(s1 has m)
		(s2 is square)
		(s2 vadj s3)
		(s2 has m)
		(s3 is square)
		(s3 has m)
	)
	(Post
		(p is winner)
	)
)

(WinD (p s1 s2 s3 m)
	(Pre
		(p is m)
		(m is mark)
		(s1 is square)
		(s1 dadj s2)
		(s1 has m)
		(s2 is square)
		(s2 has m)
		(s2 dadj s3)
		(s3 is square)
		(s3 has m)
	)
	(Post
		(p is winner)
	)
)

(InferEmpty 
	(Pre

	)
	(Post
	)
)

(Clear ()
	(Pre
	)
	(Post
		(s0 has empty)
		(s1 has empty)
		(s2 has empty)
		(s3 has empty)
		(s4 has empty)
		(s5 has empty)
		(s6 has empty)
		(s7 has empty)
		(s8 has empty)
		(p1 has turn)
		(not (p2 has turn))
		(not (p1 is winner))
		(not (p2 is winner))
	)
)
